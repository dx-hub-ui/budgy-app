# .github/workflows/supabase-migrations.yml
# Requires secret: SUPABASE_DB_URL
# Example: postgres://USER:PASSWORD@HOST:5432/DB?sslmode=require

name: Supabase Migrations (Direct)

on:
  push:
    branches: [ main ]
    paths: [ "migrations/**/*.sql" ]
  workflow_dispatch:

jobs:
  migrate:
    runs-on: ubuntu-latest
    env:
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
    steps:
      - uses: actions/checkout@v4

      - name: Install psql
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Run migrations
        shell: bash
        run: |
          set -euo pipefail

          psql "$SUPABASE_DB_URL" -v ON_ERROR_STOP=1 -c "
          CREATE TABLE IF NOT EXISTS public.schema_migrations (
            filename text PRIMARY KEY,
            applied_at timestamptz NOT NULL DEFAULT now()
          );"

          mapfile -t FILES < <(find migrations -type f -name '*.sql' | sort)
          [ ${#FILES[@]} -gt 0 ] || exit 0

          for f in "${FILES[@]}"; do
            name="$(basename "$f")"
            applied="$(psql "$SUPABASE_DB_URL" -At -c \
              "SELECT 1 FROM public.schema_migrations WHERE filename = '$name' LIMIT 1" || true)"
            if [ -z "$applied" ]; then
              psql "$SUPABASE_DB_URL" -v ON_ERROR_STOP=1 -1 -f "$f"
              psql "$SUPABASE_DB_URL" -v ON_ERROR_STOP=1 -c \
                "INSERT INTO public.schema_migrations (filename) VALUES ('$name');"
              echo "applied: $name"
            else
              echo "skip: $name"
            fi
          done
